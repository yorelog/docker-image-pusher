name: Build and Test

on:
  push:
    branches: [ main]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always

jobs:
  test:
    name: Test Suite
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Install Rust toolchain
      uses: dtolnay/rust-toolchain@stable
      
    - name: Cache cargo registry
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        
    - name: Run cargo test
      run: cargo test --verbose

  build:
    name: Build Release
    needs: test
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            binary_name: docker-image-pusher
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            binary_name: docker-image-pusher.exe
          - os: macos-latest
            target: x86_64-apple-darwin
            binary_name: docker-image-pusher
          - os: macos-latest
            target: aarch64-apple-darwin
            binary_name: docker-image-pusher
            
    runs-on: ${{ matrix.os }}
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Install Rust toolchain
      uses: dtolnay/rust-toolchain@stable
      with:
        targets: ${{ matrix.target }}
        
    - name: Cache cargo registry
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-${{ matrix.target }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        
    - name: Build release binary
      run: cargo build --release --target ${{ matrix.target }}
      
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: docker-image-pusher-${{ matrix.target }}
        path: target/${{ matrix.target }}/release/${{ matrix.binary_name }}

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts
        
    - name: Prepare release binaries
      run: |
        cd artifacts
        # Make binaries executable
        chmod +x docker-image-pusher-x86_64-unknown-linux-gnu/docker-image-pusher
        chmod +x docker-image-pusher-x86_64-apple-darwin/docker-image-pusher
        chmod +x docker-image-pusher-aarch64-apple-darwin/docker-image-pusher
        
        # Rename binaries for clarity
        mv docker-image-pusher-x86_64-unknown-linux-gnu/docker-image-pusher docker-image-pusher-linux-x64
        mv docker-image-pusher-x86_64-pc-windows-msvc/docker-image-pusher.exe docker-image-pusher-windows-x64.exe
        mv docker-image-pusher-x86_64-apple-darwin/docker-image-pusher docker-image-pusher-macos-intel
        mv docker-image-pusher-aarch64-apple-darwin/docker-image-pusher docker-image-pusher-macos-arm64
        
    - name: Generate checksums
      run: |
        cd artifacts
        sha256sum docker-image-pusher-linux-x64 > ../checksums.txt
        sha256sum docker-image-pusher-windows-x64.exe >> ../checksums.txt
        sha256sum docker-image-pusher-macos-intel >> ../checksums.txt
        sha256sum docker-image-pusher-macos-arm64 >> ../checksums.txt
        echo "Generated checksums:"
        cat ../checksums.txt
      
    - name: Create GitHub Release
      uses: softprops/action-gh-release@v2
      with:
        files: |
          artifacts/docker-image-pusher-linux-x64
          artifacts/docker-image-pusher-windows-x64.exe
          artifacts/docker-image-pusher-macos-intel
          artifacts/docker-image-pusher-macos-arm64
          checksums.txt
        body: |
          ## Docker Image Pusher ${{ github.ref_name }}
          
          This release includes pre-built binaries for multiple platforms with enhanced features and documentation.
          
          ### ðŸš€ New Features in v0.1.2
          - **Enhanced CLI Options**: `--skip-existing`, `--force-upload`, `--quiet`, `--dry-run`
          - **Resume Functionality**: Automatically resume interrupted uploads
          - **Performance Optimizations**: Improved upload strategies and parallel processing
          - **Better Error Handling**: Enhanced error messages and recovery mechanisms
          - **Comprehensive Documentation**: Updated README with enterprise scenarios and troubleshooting
          
          ### âœ¨ Core Features
          - Push Docker image tar packages directly to registries
          - Chunked uploads for large images (>10GB support)
          - Authentication support with Docker registries
          - Real-time progress tracking with detailed statistics
          - Cross-platform compatibility
          - Configurable timeouts and retry mechanisms
          
          ### ðŸ“– Usage
          ```bash
          ./docker-image-pusher \
            --address http://your-registry:5000 \
            --username your-username \
            --password your-password \
            --file /path/to/image.tar \
            --skip-existing \
            --quiet
          ```
          
          ### ðŸ“¥ Download Instructions
          Choose the appropriate binary for your platform:
          
          | Platform | Architecture | Binary |
          |----------|-------------|---------|
          | **Linux** | x86_64 | `docker-image-pusher-linux-x64` |
          | **Windows** | x86_64 | `docker-image-pusher-windows-x64.exe` |
          | **macOS** | Intel | `docker-image-pusher-macos-intel` |
          | **macOS** | Apple Silicon | `docker-image-pusher-macos-arm64` |
          
          ### ðŸ”’ Security
          - Verify downloads using the provided `checksums.txt`
          - All binaries are built from source using GitHub Actions
          
          ### ðŸ“š Documentation
          - [English README](https://github.com/yorelog/docker-image-pusher/blob/main/README.md)
          - [ä¸­æ–‡æ–‡æ¡£](https://github.com/yorelog/docker-image-pusher/blob/main/README_zh.md)
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
